name: Build and test on aarch64

on:
  schedule:
    - cron: "0 19 * * *" # run at 4 AM JST
  workflow_dispatch:
  push:

jobs:
  build-and-test-aarch64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Run commands
        with:
          arch: aarch64
          distro: ubuntu20.04

          run: |
            apt-get update -q -y
            apt-get install -q -y python3-pip git

            apt-get install -q -y curl gnupg2 lsb-release
            curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
            apt-get -q -y update && apt-get install -q -y ros-galactic-desktop
            apt-get install -q -y python3-colcon-common-extensions python3-vcstool python3-rosdep

            PACKAGE_LIST=$(colcon list --names-only)

            git config --local --unset-all http.https://github.com/.extraheader || true
            git config --global url.https://${{ secrets.GITHUB_TOKEN }}@github.com.insteadOf 'https://github.com'

            mkdir dependency_ws
            vcs import dependency_ws < build_depends.repos
            apt-get -y update
            rosdep init
            rosdep update
            DEBIAN_FRONTEND=noninteractive rosdep install -y --from-paths . --ignore-src --rosdistro galactic

            . /opt/ros/galactic/setup.sh
            colcon build --event-handlers console_cohesion+ \
              --packages-up-to $PACKAGE_LIST \
              --cmake-args -DCMAKE_BUILD_TYPE=Release

            . /opt/ros/galactic/setup.sh
            colcon test --event-handlers console_cohesion+ \
              --packages-select $PACKAGE_LIST \
              --return-code-on-test-failure
